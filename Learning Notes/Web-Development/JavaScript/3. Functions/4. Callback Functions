const sumUp = (a,b, ...numbers) => {
    const validateNumber = (number) => {
        return isNan(number)? 0 : number;
    };
    let sum = 0;
    for(const num of numbers){
        sum+=validateNumber(num);
    }
    return sum;
}


========================================

const sumUp(resultCb, ...numbers) =>{

    const validateNumber = (number) => {
        return isNan(number)? 0 : number;
    };
    let sum = 0;
    for(const num of numbers){
        sum+=validateNumber(num);
    }
    resultCb(sum);
}

const showResult = (result)=>{
    alert("Result: "+result);
}

sumUp(showResult, 1,2);


========================================


const combine(resultCb,operation, ...numbers) =>{

    const validateNumber = (number) => {
        return isNan(number)? 0 : number;
    };
    let sum = 0;
    for(const num of numbers){
        if(operation === 'ADD')
            sum+=validateNumber(num);
        else
            sum-=validateNumber(num);
    }
    // resultCb(sum , operation === 'ADD' ? "ADD":"SUB");
    resultCb(sum);
}

const showResult = (messageText, result)=>{
    alert(messageText+": "+result);
}


combine(showResult.bind(this, 'The Result After adding all numbers is'), 'ADD', 1,2,3);   
combine(showResult.bind(this, 'The Result After Substracting all numbers is'), 'SUB', 1,2,3);   

//Bind will create a new Refrence to a function which will be preconfigured with the argument it receives. 
It is not immediately executed but instead it is prepared for future execution.

When you bind the argument to a function, it will come first then the other arguments called on this function by other calls.
Hence here message text is the first argument.
