Calling a funciton with Different Parameters.

function add(a:combinable, b:combinable){
    if(typeof a==='string' || typeof b==='string'){  // This is a type guards using typeof
        return a.toString() + b.toString();
    }
    return a+b;
}

const result=add(1,5); // here TS doesn't know about the type of result and it will show Combinable

Again if we pass the Arguments as String:

const result=add("Shashank","Sharan"); 
result.split(' ');// here we will get the error because the TS doen't know the actual type of result. it will just know it's Combinable.

Solution:
1. using TypeCasting:

    const result=add("Shashank","Sharan") as String; 
    result.split(' '); // Then this will not throw error

2. Funtion Overload.:

    function add(a:string, b:string):string;
    function add(a:number, b:number):number;
    function add(a:combinable, b:combinable){
    if(typeof a==='string' || typeof b==='string'){  // This is a type guards using typeof
            return a.toString() + b.toString();
        }
        return a+b;
    }

