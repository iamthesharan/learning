In descriminated union we have one common property in every object that makes up our union which describes that object.

interface bird{
    type:'bird';// This is not the value but a literal Type
    flyingSpeed: number;
}

interface horse{
    type:'horse';
    runningSpeed:number;
}

type Animal= bird | horse;

function moveAnimal(animal:Animal){
    let speed;
    if(animal.type === 'bird')
        speed=animal.flyingSpeed;
    else
        speed=animal.runningSpeed=20;
}

moveAnimal({type:'bird', flyingSpeed:10}); // if you provide 2nd arguments as runningSpeed, it will throw an error