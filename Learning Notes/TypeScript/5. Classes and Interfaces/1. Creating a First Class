class Department{
    name:string;  // you can also provide let here
    age:number;
    constructor(name:string,age:number){  // Constructor in TS is defined by the keyword constructor
        this.name=name;
        this.age=age;
    }

    describe(){
        console.log(this.name);
    }
}

const dept=new Department('GSS',24);
dept..describe(); // this will print the value of the name that was assigned in Constructor.
now if we store the describe function in an object.

const descMethod={describe:dept.describe}

descMethod.describe(); // this will print undefined and TS will not throw an error. Here the name is not associated with any department object as we are simply assigning the method.

================================================================================================

Now if we pass this keyword as an argument in the describe() method then any variable that is defined inside the block will be associated with the current calling class object.

describe(this:Department){ // this method will be called only by the Department object

}


Now if we call descMethod.describe(); we will get the error
