Important Constructors of StringBuffer class

Java StringBuffer class is thread-safe i.e. multiple threads cannot access it simultaneously. So it is safe and will result in an order.

Constructor	                     Description


StringBuffer()	                 creates an empty string buffer with the initial capacity of 16.
StringBuffer(String str)	     creates a string buffer with the specified string.
StringBuffer(int capacity)	     creates an empty string buffer with the specified capacity as length.



Important methods of StringBuffer class

Modifier and Type	                      Method	                    Description

public synchronized StringBuffer	      append(String s)	            is used to append the specified string with this string. The append() method is overloaded like                                                                         append(char), append(boolean), append(int), append(float), append(double) etc.

public synchronized StringBuffer	      insert(int offset, String s)	is used to insert the specified string with this string at the specified position. The insert()                                                                         method is overloaded like insert(int, char), insert(int, boolean), insert(int, int), insert(int,                                                                         float), insert(int, double) etc.

public synchronized StringBuffer	      replace(int startIndex, 
                                            int endIndex, String str)	is used to replace the string from specified startIndex and endIndex.
                                            
public synchronized StringBuffer	      delete(int startIndex, 
                                            int endIndex)	            is used to delete the string from specified startIndex and endIndex.
                                            
                                            
public synchronized StringBuffer	       reverse()	                is used to reverse the string.

public int	                               capacity()	                is used to return the current capacity.

public void	                               ensureCapacity
                                           (int minimumCapacity)	    is used to ensure the capacity at least equal to the given minimum.
                                           
public char	                               charAt(int index)	        is used to return the character at the specified position.

public int	                               length()	                    is used to return the length of the string i.e. total number of characters.

public String	                           substring(int beginIndex)	is used to return the substring from the specified beginIndex.

public String	                           substring(int beginIndex, 
                                            int endIndex)	            is used to return the substring from the specified beginIndex and endIndex.
                                            
                                            
                                            
Program:


class Car{
	public static void main(String ...args) {
		StringBuffer s=new StringBuffer("Shashank ");
		s.append("Prasad"); //Shashank Prasad
		s.insert(s.indexOf("Prasad"), "Sharan ");//Shashank Sharan Prasad
		s.replace(s.lastIndexOf(" "),s.length() ,"");//Shashank Sharan
		s.reverse();//narahS knahsahS
		s.reverse();//Shashank Sharan
//		s.ensureCapacity();
		s.delete(s.indexOf("Sharan")-1,s.length());//Shashank
		System.out.println(s);
	}
}
                      
                      
                      
                      
StringBuilder ensureCapacity() method
    The ensureCapacity() method of StringBuilder class ensures that the given capacity is the minimum to the current capacity. If it is greater than the current capacity, it increases the capacity by (oldcapacity*2)+2. For example if your current capacity is 16, it will be (16*2)+2=34.

class StringBuilderExample7{  
    public static void main(String args[]){  
        StringBuilder sb=new StringBuilder();  
        System.out.println(sb.capacity());//default 16  
        sb.append("Hello");  
        System.out.println(sb.capacity());//now 16  
        sb.append("java is my favourite language");  
        System.out.println(sb.capacity());//now (16*2)+2=34 i.e (oldcapacity*2)+2  
        sb.ensureCapacity(10);//now no change  
        System.out.println(sb.capacity());//now 34  
        sb.ensureCapacity(50);//now (34*2)+2  
        System.out.println(sb.capacity());//now 70  
    }  
}                                              
                                            
                                            
                                            